{"ast":null,"code":"var _jsxFileName = \"/Users/aishwaryaravi/Desktop/Enterprise Software Platforms/Final Project/HR-Management-System/Frontend/src/component/CityForm.jsx\";\nimport React, { Component } from \"react\";\nimport \"./CityForm.css\";\nimport axios from \"axios\";\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass CityForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stateData: [],\n      filteredStateData: [],\n      countryData: [],\n      filteredCountryData: []\n    };\n\n    this.loadCountryInfo = () => {\n      axios.get(process.env.REACT_APP_API_URL + \"/api/country\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      }).then(response => {\n        this.setState({\n          countryData: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.loadStateInfo = () => {\n      axios.get(process.env.REACT_APP_API_URL + \"/api/state\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      }).then(response => {\n        this.setState({\n          stateData: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  onChange(e) {\n    this.setState({\n      CityData: e.target.value\n    });\n  }\n\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n  }\n\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n    let filteredState = this.state.stateData.filter(data => data[\"country\"][0][\"_id\"] == currentCountry);\n    this.setState({\n      filteredStateData: filteredState\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      id: \"role-form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Add City Details\"), React.createElement(\"div\", {\n      id: \"role-form-outer-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Form, {\n      id: \"form\",\n      onSubmit: this.props.onCitySubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Country\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"country\",\n      onChange: this.onCountryChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Select your option\"), this.state.countryData.map((data, index) => React.createElement(\"option\", {\n      value: data[\"_id\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, data[\"CountryName\"]))))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"State\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"state\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Select your option\"), this.state.filteredStateData.map((data, index) => React.createElement(\"option\", {\n      value: data[\"_id\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, data[\"StateName\"]))))), React.createElement(Form.Group, {\n      as: Row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      column: true,\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"City\"), React.createElement(Col, {\n      sm: 10,\n      className: \"form-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"Text\",\n      placeholder: \"City\",\n      name: \"City\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), React.createElement(Form.Group, {\n      as: Row,\n      id: \"form-submit-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Form.Group, {\n      as: Row,\n      id: \"form-cancel-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        span: 10,\n        offset: 2\n      },\n      id: \"form-cancel-button-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"reset\",\n      onClick: this.props.onFormClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"cancel\"))))));\n  }\n\n}\n\nexport default CityForm;","map":{"version":3,"sources":["/Users/aishwaryaravi/Desktop/Enterprise Software Platforms/Final Project/HR-Management-System/Frontend/src/component/CityForm.jsx"],"names":["React","Component","axios","Form","Button","Col","Row","CityForm","state","stateData","filteredStateData","countryData","filteredCountryData","loadCountryInfo","get","process","env","REACT_APP_API_URL","headers","authorization","localStorage","getItem","then","response","setState","data","catch","error","console","log","loadStateInfo","onChange","e","CityData","target","value","componentWillMount","onCountryChange","currentCountry","filteredState","filter","render","props","onCitySubmit","bind","map","index","span","offset","onFormClose"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./CityForm.css\";\nimport axios from \"axios\";\n\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nclass CityForm extends Component {\n  state = {\n    stateData: [],\n    filteredStateData: [],\n    countryData: [],\n    filteredCountryData: []\n  };\n\n  onChange(e) {\n    this.setState({ CityData: e.target.value });\n  }\n  loadCountryInfo = () => {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/api/country\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then(response => {\n        this.setState({ countryData: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n  loadStateInfo = () => {\n    axios\n      .get(process.env.REACT_APP_API_URL + \"/api/state\", {\n        headers: {\n          authorization: localStorage.getItem(\"token\") || \"\"\n        }\n      })\n      .then(response => {\n        this.setState({ stateData: response.data });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  componentWillMount() {\n    this.loadCountryInfo();\n    this.loadStateInfo();\n  }\n  onCountryChange(e) {\n    console.log(e.target.value);\n    let currentCountry = e.target.value;\n    let filteredState = this.state.stateData.filter(\n      data => data[\"country\"][0][\"_id\"] == currentCountry\n    );\n    this.setState({ filteredStateData: filteredState });\n  }\n  render() {\n    return (\n      <div>\n        <h2 id=\"role-form-title\">Add City Details</h2>\n\n        <div id=\"role-form-outer-div\">\n          <Form id=\"form\" onSubmit={this.props.onCitySubmit}>\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                Country\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  as=\"select\"\n                  name=\"country\"\n                  onChange={this.onCountryChange.bind(this)}\n                >\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.countryData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"CountryName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                State\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control as=\"select\" name=\"state\" required>\n                  <option value=\"\" disabled selected>\n                    Select your option\n                  </option>\n                  {this.state.filteredStateData.map((data, index) => (\n                    <option value={data[\"_id\"]}>{data[\"StateName\"]}</option>\n                  ))}\n                </Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm={2}>\n                City\n              </Form.Label>\n              <Col sm={10} className=\"form-input\">\n                <Form.Control\n                  type=\"Text\"\n                  placeholder=\"City\"\n                  name=\"City\"\n                  required\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} id=\"form-submit-button\">\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Submit</Button>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} id=\"form-cancel-button\">\n              <Col sm={{ span: 10, offset: 2 }} id=\"form-cancel-button-inner\">\n                <Button type=\"reset\" onClick={this.props.onFormClose}>\n                  cancel\n                </Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CityForm;\n"]},"metadata":{},"sourceType":"module"}